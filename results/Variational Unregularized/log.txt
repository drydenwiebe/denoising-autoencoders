Train Epoch: 200 [34560/60000 (58%)]	Loss: 113.887955
Train Epoch: 200 [35840/60000 (60%)]	Loss: 117.574387
Train Epoch: 200 [37120/60000 (62%)]	Loss: 112.886879
Train Epoch: 200 [38400/60000 (64%)]	Loss: 117.809296
Train Epoch: 200 [39680/60000 (66%)]	Loss: 113.415253
Train Epoch: 200 [40960/60000 (68%)]	Loss: 110.756737
Train Epoch: 200 [42240/60000 (70%)]	Loss: 115.200478
Train Epoch: 200 [43520/60000 (72%)]	Loss: 109.883141
Train Epoch: 200 [44800/60000 (75%)]	Loss: 121.219315
Train Epoch: 200 [46080/60000 (77%)]	Loss: 117.088287
Train Epoch: 200 [47360/60000 (79%)]	Loss: 113.944244
Train Epoch: 200 [48640/60000 (81%)]	Loss: 115.142136
Train Epoch: 200 [49920/60000 (83%)]	Loss: 119.903458
Train Epoch: 200 [51200/60000 (85%)]	Loss: 113.615402
Train Epoch: 200 [52480/60000 (87%)]	Loss: 109.873154
Train Epoch: 200 [53760/60000 (90%)]	Loss: 118.465141
Train Epoch: 200 [55040/60000 (92%)]	Loss: 115.522400
Train Epoch: 200 [56320/60000 (94%)]	Loss: 117.920670
Train Epoch: 200 [57600/60000 (96%)]	Loss: 113.487946
Train Epoch: 200 [58880/60000 (98%)]	Loss: 114.679428
====> Epoch: 200 Average loss: 114.7680
====> Test set loss: 115.1103

# Create training and test dataloaders
num_workers = 0
# how many samples per batch to load
batch_size = 128
# if we use dropout or not
dropout = False
# define the learning rate
learning_rate = 1e-4
# number of epochs to train the model
n_epochs = 200
# for adding noise to images
noise_factor = 0.5
# defines the size of the latent space
latent_space = 8
# weight decay for ADAM
weight_decay=1e-5
# set the seed for PyTorch
torch.manual_seed(args.seed)
